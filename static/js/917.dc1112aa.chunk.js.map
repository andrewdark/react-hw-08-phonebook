{"version":3,"file":"static/js/917.dc1112aa.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","../node_modules/nanoid/index.browser.js","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactFilter/ContactFilter.module.css?a140","components/ContactFilter/ContactFilter.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","pages/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"btn\":\"ContactForm_btn__wll+u\"};","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","import React, { useState } from 'react';\nimport css from './ContactForm.module.css';\nimport { nanoid } from 'nanoid';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from '../../redux/contacts/contactsOperations';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contactsRedux = useSelector(state => state.contacts.items);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = evt => {\n    const tagName = evt.target.name;\n    const value = evt.target.value;\n    if (tagName === 'name') {\n      setName(value);\n    }\n    if (tagName === 'number') {\n      setNumber(value);\n    }\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    addCnt({ name: name, number: number });\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const addCnt = contact => {\n    const names = contactsRedux.map(elem => elem.name.toLowerCase());\n    if (names.includes(contact.name.toLowerCase())) {\n      window.alert('The name ' + contact.name + ' already exists');\n      return;\n    }\n\n    const newContact = {\n      id: nanoid(),\n      name: contact.name,\n      number: contact.number,\n    };\n    dispatch(addContact(newContact));\n  };\n\n  return (\n    <div>\n      <form className={css.form} onSubmit={handleSubmit}>\n        <label htmlFor=\"name\">Name</label>\n        <br />\n        <input\n          id=\"name\"\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          required\n        />\n        <br />\n        <label htmlFor=\"number\">Number</label>\n        <br />\n        <input\n          id=\"number\"\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          required\n        />\n        <br />\n        <button className={css.btn} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactFilter_form__RBCmO\",\"btn\":\"ContactFilter_btn__SbZ+2\",\"inp\":\"ContactFilter_inp__IHR1Z\"};","import css from './ContactFilter.module.css';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from '../../redux/contacts/filtersSlice';\n\nexport const ContactFilter = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <div className={css.form}>\n      <label htmlFor=\"filter\">Find contacts by name</label>\n      <br />\n      <input\n        id=\"filter\"\n        className={css.inp}\n        type=\"text\"\n        name=\"filter\"\n        onChange={event => {\n          dispatch(setFilter(event.target.value.toLowerCase()));\n        }}\n        required\n      />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"ContactList_btn__6Piat\"};","import css from './ContactList.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContacts } from '../../redux/contacts/contactsOperations';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contactsRedux = useSelector(state => state.contacts.items);\n  const filterRedux = useSelector(state => state.filters);\n\n  const findContact = () => {\n    return contactsRedux.filter(el => {\n      let temp = el.name.substr(0, filterRedux.length);\n      return filterRedux.toLowerCase() === temp.toLowerCase();\n    });\n  };\n\n  return (\n    <ul>\n      {findContact().map(elem => {\n        return (\n          <li key={elem.id}>\n            <span style={{ display: 'line-block', marginRight: 16 }}>\n              {elem.name}: {elem.number}\n            </span>\n            <button\n              id={elem.id}\n              onClick={() => dispatch(deleteContacts(elem.id))}\n              className={css.btn}\n            >\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n","import React, { useEffect } from 'react';\n\nimport { ContactForm } from '../components/ContactForm/ContactForm';\nimport { ContactFilter } from '../components/ContactFilter/ContactFilter';\nimport { ContactList } from '../components/ContactList/ContactList';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { fetchContacts } from '../redux/contacts/contactsOperations';\n\nexport default function Tasks() {\n  const dispatch = useDispatch();\n  const { isLoading, error } = useSelector(state => state.contacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div\n      style={{\n        width: 400,\n        marginLeft: '8px',\n      }}\n    >\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      {isLoading && <b>Loading tasks...</b>}\n      {error && <b>{error}</b>}\n      <ContactFilter />\n      <ContactList />\n    </div>\n  );\n}\n"],"names":["nanoid","size","id","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","ContactForm","dispatch","useDispatch","contactsRedux","useSelector","state","contacts","items","useState","name","setName","number","setNumber","handleChange","evt","tagName","target","value","reset","addCnt","contact","map","elem","toLowerCase","includes","window","alert","newContact","addContact","className","css","onSubmit","preventDefault","htmlFor","type","onChange","required","ContactFilter","event","setFilter","ContactList","filterRedux","filters","filter","el","temp","substr","length","style","display","marginRight","onClick","deleteContacts","Tasks","isLoading","error","useEffect","fetchContacts","width","marginLeft"],"sourceRoot":""}